
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

using System;
using System.Collections.Generic;

namespace scene { 

	public static class SceneObject_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.SceneObject dataObject ) 
		{ 
			Vec3_ByteStream.ObjectToByteStream( stream, dataObject.position );
			stream.WriteFloat32( dataObject.scale );
			Color_ByteStream.ObjectToByteStream( stream, dataObject.color );
			stream.WriteInt32( dataObject.lod );
			stream.WriteUint8( dataObject.visible ? (byte)1 : (byte)0 );
			stream.WriteGuid( dataObject.next != null ? dataObject.next.Guid : Guid.Empty );
			stream.WriteUint8( dataObject.isSoundEnabled ? (byte)1 : (byte)0 );
			stream.WriteUint8( dataObject.isSfxEnabled ? (byte)1 : (byte)0 );
		}		
	}

	public static class SceneObjectsCollection_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.SceneObjectsCollection dataObject ) 
		{ 
		}		
	}

	public static class SceneMesh_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.SceneMesh dataObject ) 
		{ 
			Color_ByteStream.ObjectToByteStream( stream, dataObject.colorSnd );
		}		
	}

	public static class SceneAnimMesh_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.SceneAnimMesh dataObject ) 
		{ 
			Vec3_ByteStream.ObjectToByteStream( stream, dataObject.positionSfx );
		}		
	}

	public static class SceneZoneTrigger_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.SceneZoneTrigger dataObject ) 
		{ 
			stream.WriteBytes( System.Text.Encoding.ASCII.GetBytes( dataObject.name ) );
			stream.WriteInt32( (int)dataObject.triggerType );
			scene.Controller_ByteStream.ObjectToByteStream( stream, dataObject.ctrl );
		}		
	}

	public static class Scene_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.Scene dataObject ) 
		{ 
			scene.SceneObject_ByteStream.ObjectToByteStream( stream, dataObject.mainObject );
		}		
	}

	public static class Controller_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.Controller dataObject ) 
		{ 
			stream.WriteInt32( dataObject.priority );
		}		
	}

	public static class ControllerBox_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.ControllerBox dataObject ) 
		{ 
			Vec3_ByteStream.ObjectToByteStream( stream, dataObject.size );
		}		
	}

	public static class ControllerSphere_ByteStream
	{
		public static void ObjectToByteStream( core.ByteStreamWriter stream, scene.ControllerSphere dataObject ) 
		{ 
			stream.WriteFloat32( dataObject.radius );
		}		
	}

} /* namespace scene */ 
