
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#include "Scene.h"

#include "..\..\Reflection.h"

#include "Scene.Reflection.h"

// depends on parent/reference files
// depends on reflection files
#include "..\Engine\Fundamental.Reflection.h"

namespace scene { 

class SceneObject_Member_parent : public reflection::ParentReference
{
public:
	SceneObject_Member_parent()
	{
		Set_Guid("ab60af94-9cf8-4825-a1c9-77c35fe7b49a");
		Set_Name("parent");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
			
		scene::Scene * pDataObject = NULL;			
		if ( pDataObjectUnityped )
		{
			pDataObject = core::polymorphic_downcast< scene::Scene * >( pDataObjectUnityped );
			if ( !pDataObject )
				return false;
		}		
		pThis->Set_parent( pDataObject );
		return true;	
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		pDataObjectUnityped = pThis->Get_parent();
		return true;	
	}
};

class SceneObject_Member_position : public reflection::Value
{
public:
	SceneObject_Member_position()
	{
		Set_Guid("fae85196-efcd-4004-a660-afbbc4ccb7d9");
		Set_Name("position");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed const * pDataObject = core::polymorphic_downcast < Vec3_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_position( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed * pDataObject = CORE_NEW Vec3_Boxed();
		pDataObject->value = pThis->Get_position();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3 value; if ( !Vec3_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_position( value );
		return true;
	}	
};

class SceneObject_Member_scale : public reflection::Value
{
public:
	SceneObject_Member_scale()
	{
		Set_Guid("1a72eee7-8cae-4d96-895c-5004ca2539b1");
		Set_Name("scale");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		float_Boxed const * pDataObject = core::polymorphic_downcast < float_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_scale( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		float_Boxed * pDataObject = CORE_NEW float_Boxed();
		pDataObject->value = pThis->Get_scale();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::float32 value; if ( !stream.ReadFloat32( value ) ) return false;
		pThis->Set_scale( value );
		return true;
	}	
};

class SceneObject_Member_color : public reflection::Value
{
public:
	SceneObject_Member_color()
	{
		Set_Guid("ef540747-1aee-44f5-b67f-83b164495fe9");
		Set_Name("color");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color_Boxed const * pDataObject = core::polymorphic_downcast < Color_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_color( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color_Boxed * pDataObject = CORE_NEW Color_Boxed();
		pDataObject->value = pThis->Get_color();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color value; if ( !Color_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_color( value );
		return true;
	}	
};

class SceneObject_Member_lod : public reflection::Value
{
public:
	SceneObject_Member_lod()
	{
		Set_Guid("4d99ebcb-27de-4835-8317-be504f3959f7");
		Set_Name("lod");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		int_Boxed const * pDataObject = core::polymorphic_downcast < int_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_lod( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		int_Boxed * pDataObject = CORE_NEW int_Boxed();
		pDataObject->value = pThis->Get_lod();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::int32 value; if ( !stream.ReadInt32( value ) ) return false;
		pThis->Set_lod( value );
		return true;
	}	
};

class SceneObject_Member_visible : public reflection::Value
{
public:
	SceneObject_Member_visible()
	{
		Set_Guid("22df5858-12d4-4b51-86be-061df2d04dcc");
		Set_Name("visible");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed const * pDataObject = core::polymorphic_downcast < bool_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_visible( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed * pDataObject = CORE_NEW bool_Boxed();
		pDataObject->value = pThis->Get_visible();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::uint8 value_Byte; if ( !stream.ReadUint8( value_Byte ) ) return false;
		bool value = !!value_Byte;
		pThis->Set_visible( value );
		return true;
	}	
};

class SceneObject_Member_next : public reflection::Reference
{
public:
	SceneObject_Member_next()
	{
		Set_Guid("386ddb5c-8c5b-4724-ab45-620990bf5cca");
		Set_Name("next");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
			
		scene::SceneObject * pDataObject = NULL;			
		if ( pDataObjectUnityped )
		{
			pDataObject = core::polymorphic_downcast< scene::SceneObject * >( pDataObjectUnityped );
			if ( !pDataObject )
				return false;
		}		
		pThis->Set_next( pDataObject );
		return true;	
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		pDataObjectUnityped = pThis->Get_next();
		return true;	
	}
};

class SceneObject_Member_isSoundEnabled : public reflection::Value
{
public:
	SceneObject_Member_isSoundEnabled()
	{
		Set_Guid("82d53064-cdaf-4689-92be-76bd5ce1baf8");
		Set_Name("isSoundEnabled");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed const * pDataObject = core::polymorphic_downcast < bool_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_isSoundEnabled( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed * pDataObject = CORE_NEW bool_Boxed();
		pDataObject->value = pThis->Get_isSoundEnabled();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::uint8 value_Byte; if ( !stream.ReadUint8( value_Byte ) ) return false;
		bool value = !!value_Byte;
		pThis->Set_isSoundEnabled( value );
		return true;
	}	
};

class SceneObject_Member_isSfxEnabled : public reflection::Value
{
public:
	SceneObject_Member_isSfxEnabled()
	{
		Set_Guid("3fd380ef-b117-407a-b784-67101f443878");
		Set_Name("isSfxEnabled");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed const * pDataObject = core::polymorphic_downcast < bool_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_isSfxEnabled( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneObject const * pThis = core::polymorphic_downcast< scene::SceneObject const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		bool_Boxed * pDataObject = CORE_NEW bool_Boxed();
		pDataObject->value = pThis->Get_isSfxEnabled();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneObject * pThis = core::polymorphic_downcast< scene::SceneObject * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::uint8 value_Byte; if ( !stream.ReadUint8( value_Byte ) ) return false;
		bool value = !!value_Byte;
		pThis->Set_isSfxEnabled( value );
		return true;
	}	
};

class SceneObject_Member_TestFunction : public reflection::FunctionUser
{
public:
	SceneObject_Member_TestFunction()
	{
		Set_Guid("c4b461bf-af49-4925-874f-68827e86e992");
		Set_Name("TestFunction");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneObject * pObject = core::polymorphic_downcast < scene::SceneObject * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		int Arg_argInt; if ( !stream.ReadInt32( Arg_argInt ) ) return false;

		Vec3 Arg_argVec; if ( !Vec3_ByteStream::ObjectFromByteStream( stream, Arg_argVec ) ) return false;

		core::Guid Arg_argRef_Guid; if ( !stream.ReadGuid( Arg_argRef_Guid ) ) return false;
		core::ReferenceObject * Arg_argRef_Unityped = NULL;
		if ( !Arg_argRef_Guid.IsEmpty() && !core::Objects::FindObject( Arg_argRef_Guid, Arg_argRef_Unityped ) )
			return false;
		scene::SceneZoneTrigger * Arg_argRef = core::polymorphic_downcast < scene::SceneZoneTrigger * > ( Arg_argRef_Unityped );

		scene::TriggerType Arg_argEnum; if ( !stream.ReadEnum( Arg_argEnum ) ) return false;

		core::uint32 Arg_argString_Size; if ( !stream.ReadSize( Arg_argString_Size ) ) return false;
		void const * Arg_argString_Bytes; if ( !stream.ReadBytes( Arg_argString_Size, Arg_argString_Bytes ) ) return false;
		string Arg_argString ( (char*)Arg_argString_Bytes, Arg_argString_Size );

		Color Arg_argColor; if ( !Color_ByteStream::ObjectFromByteStream( stream, Arg_argColor ) ) return false;

		pObject->TestFunction ( Arg_argInt, Arg_argVec, Arg_argRef, Arg_argEnum, Arg_argString, Arg_argColor );
		return true; 
	}
};

class SceneObject_Member_TestLua : public reflection::FunctionUser
{
public:
	SceneObject_Member_TestLua()
	{
		Set_Guid("6d1bdbcb-6541-4485-85ba-e531c5fd9a4c");
		Set_Name("TestLua");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneObject * pObject = core::polymorphic_downcast < scene::SceneObject * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		core::uint8 Arg_argBool_Byte; if ( !stream.ReadUint8( Arg_argBool_Byte ) ) return false;
		bool Arg_argBool = !!Arg_argBool_Byte;

		Vec3 Arg_argVec3; if ( !Vec3_ByteStream::ObjectFromByteStream( stream, Arg_argVec3 ) ) return false;

		float Arg_argFloat; if ( !stream.ReadFloat32( Arg_argFloat ) ) return false;

		core::Guid Arg_argRef_Guid; if ( !stream.ReadGuid( Arg_argRef_Guid ) ) return false;
		core::ReferenceObject * Arg_argRef_Unityped = NULL;
		if ( !Arg_argRef_Guid.IsEmpty() && !core::Objects::FindObject( Arg_argRef_Guid, Arg_argRef_Unityped ) )
			return false;
		scene::SceneObject * Arg_argRef = core::polymorphic_downcast < scene::SceneObject * > ( Arg_argRef_Unityped );

		pObject->TestLua ( Arg_argBool, Arg_argVec3, Arg_argFloat, Arg_argRef );
		return true; 
	}
};

class SceneObject_Member_TestLuaCC : public reflection::FunctionLuaCallCC
{
public:
	SceneObject_Member_TestLuaCC()
	{
		Set_Guid("d02c0264-fb6c-42a1-9fef-8924f71f122c");
		Set_Name("TestLuaCC");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneObject * pObject = core::polymorphic_downcast < scene::SceneObject * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		float Arg_argStr; if ( !stream.ReadFloat32( Arg_argStr ) ) return false;

		byte Arg_argByte; if ( !stream.ReadUint8( Arg_argByte ) ) return false;

		pObject->TestLuaCC ( Arg_argStr, Arg_argByte );
		return true; 
	}
};

class SceneObject_Member_LuaConstructor : public reflection::FunctionLua
{
public:
	SceneObject_Member_LuaConstructor()
	{
		Set_Guid("9bdb2933-1665-473e-bdbc-b994fdf01778");
		Set_Name("LuaConstructor");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneObject * pObject = core::polymorphic_downcast < scene::SceneObject * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		pObject->LuaConstructor ( );
		return true; 
	}
};

class SceneObject_Member_LuaDestructor : public reflection::FunctionLua
{
public:
	SceneObject_Member_LuaDestructor()
	{
		Set_Guid("f2012c64-e43e-4d48-aa03-e407ed6c20d0");
		Set_Name("LuaDestructor");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneObject * pObject = core::polymorphic_downcast < scene::SceneObject * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		pObject->LuaDestructor ( );
		return true; 
	}
};


SceneObject_Reflection::SceneObject_Reflection()
{
	Set_Guid("a31ecf2f-653b-4595-8eed-c50c0d3cc116");
	Set_TypeName("SceneObject");	
	Get_Members().Add( CORE_NEW SceneObject_Member_parent() );
	Get_Members().Add( CORE_NEW SceneObject_Member_position() );
	Get_Members().Add( CORE_NEW SceneObject_Member_scale() );
	Get_Members().Add( CORE_NEW SceneObject_Member_color() );
	Get_Members().Add( CORE_NEW SceneObject_Member_lod() );
	Get_Members().Add( CORE_NEW SceneObject_Member_visible() );
	Get_Members().Add( CORE_NEW SceneObject_Member_next() );
	Get_Members().Add( CORE_NEW SceneObject_Member_isSoundEnabled() );
	Get_Members().Add( CORE_NEW SceneObject_Member_isSfxEnabled() );
	Get_Members().Add( CORE_NEW SceneObject_Member_TestFunction() );
	Get_Members().Add( CORE_NEW SceneObject_Member_TestLua() );
	Get_Members().Add( CORE_NEW SceneObject_Member_TestLuaCC() );
	Get_Members().Add( CORE_NEW SceneObject_Member_LuaConstructor() );
	Get_Members().Add( CORE_NEW SceneObject_Member_LuaDestructor() );
}

void SceneObject_Reflection::CopyObjectDataFromTo( SceneObject const & from, SceneObject & to )
{
	// TODO: implement
}

core::ReferenceObject * SceneObject_Reflection::New() const
{ 
	return CORE_NEW scene::SceneObject(); 
}

void SceneObject_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}


SceneObjectsCollection_Reflection::SceneObjectsCollection_Reflection()
{
	Set_Guid("1ced8553-f8e8-428d-9a1f-8b95c40fc073");
	Set_TypeName("SceneObjectsCollection");	
}

void SceneObjectsCollection_Reflection::CopyObjectDataFromTo( SceneObjectsCollection const & from, SceneObjectsCollection & to )
{
	// TODO: implement
}


class SceneMesh_Member_colorSnd : public reflection::Value
{
public:
	SceneMesh_Member_colorSnd()
	{
		Set_Guid("58afe797-43cf-4ae2-b3d1-2d05ef2a6508");
		Set_Name("colorSnd");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneMesh * pThis = core::polymorphic_downcast< scene::SceneMesh * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color_Boxed const * pDataObject = core::polymorphic_downcast < Color_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_colorSnd( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneMesh const * pThis = core::polymorphic_downcast< scene::SceneMesh const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color_Boxed * pDataObject = CORE_NEW Color_Boxed();
		pDataObject->value = pThis->Get_colorSnd();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneMesh * pThis = core::polymorphic_downcast< scene::SceneMesh * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Color value; if ( !Color_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_colorSnd( value );
		return true;
	}	
};

class SceneMesh_Member_TestLuaDerived : public reflection::FunctionUser
{
public:
	SceneMesh_Member_TestLuaDerived()
	{
		Set_Guid("af593564-9f51-4793-b5c9-302a5733cd4f");
		Set_Name("TestLuaDerived");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneMesh * pObject = core::polymorphic_downcast < scene::SceneMesh * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		int Arg_argInt; if ( !stream.ReadInt32( Arg_argInt ) ) return false;

		pObject->TestLuaDerived ( Arg_argInt );
		return true; 
	}
};

class SceneMesh_Member_TestLuaCall : public reflection::FunctionLua
{
public:
	SceneMesh_Member_TestLuaCall()
	{
		Set_Guid("fb2fc7e3-73da-44a4-accb-fdb6bc31e19b");
		Set_Name("TestLuaCall");
	}
	virtual bool FunctionCall_FromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass const & type, core::ReferenceObject * pObjectUnityped )
	{
		scene::SceneMesh * pObject = core::polymorphic_downcast < scene::SceneMesh * >( pObjectUnityped );	
		if ( pObject == NULL )
			return false;
			
		Vec2 Arg_argVal; if ( !Vec2_ByteStream::ObjectFromByteStream( stream, Arg_argVal ) ) return false;

		core::Guid Arg_argRef_Guid; if ( !stream.ReadGuid( Arg_argRef_Guid ) ) return false;
		core::ReferenceObject * Arg_argRef_Unityped = NULL;
		if ( !Arg_argRef_Guid.IsEmpty() && !core::Objects::FindObject( Arg_argRef_Guid, Arg_argRef_Unityped ) )
			return false;
		scene::SceneMesh * Arg_argRef = core::polymorphic_downcast < scene::SceneMesh * > ( Arg_argRef_Unityped );

		pObject->TestLuaCall ( Arg_argVal, Arg_argRef );
		return true; 
	}
};


SceneMesh_Reflection::SceneMesh_Reflection()
{
	Set_Guid("55a7a7fc-de50-4460-855c-f5a6dd785408");
	Set_TypeName("SceneMesh");	
	Get_Members().Add( CORE_NEW SceneMesh_Member_colorSnd() );
	Get_Members().Add( CORE_NEW SceneMesh_Member_TestLuaDerived() );
	Get_Members().Add( CORE_NEW SceneMesh_Member_TestLuaCall() );
}

void SceneMesh_Reflection::CopyObjectDataFromTo( SceneMesh const & from, SceneMesh & to )
{
	// TODO: implement
}

core::ReferenceObject * SceneMesh_Reflection::New() const
{ 
	return CORE_NEW scene::SceneMesh(); 
}

void SceneMesh_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

class SceneAnimMesh_Member_positionSfx : public reflection::Value
{
public:
	SceneAnimMesh_Member_positionSfx()
	{
		Set_Guid("b940536c-4640-414a-b89f-fa8ea1bfab65");
		Set_Name("positionSfx");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneAnimMesh * pThis = core::polymorphic_downcast< scene::SceneAnimMesh * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed const * pDataObject = core::polymorphic_downcast < Vec3_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_positionSfx( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneAnimMesh const * pThis = core::polymorphic_downcast< scene::SceneAnimMesh const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed * pDataObject = CORE_NEW Vec3_Boxed();
		pDataObject->value = pThis->Get_positionSfx();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneAnimMesh * pThis = core::polymorphic_downcast< scene::SceneAnimMesh * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3 value; if ( !Vec3_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_positionSfx( value );
		return true;
	}	
};


SceneAnimMesh_Reflection::SceneAnimMesh_Reflection()
{
	Set_Guid("45cb2111-a7ed-430c-9ae2-73653daad168");
	Set_TypeName("SceneAnimMesh");	
	Get_Members().Add( CORE_NEW SceneAnimMesh_Member_positionSfx() );
}

void SceneAnimMesh_Reflection::CopyObjectDataFromTo( SceneAnimMesh const & from, SceneAnimMesh & to )
{
	// TODO: implement
}

core::ReferenceObject * SceneAnimMesh_Reflection::New() const
{ 
	return CORE_NEW scene::SceneAnimMesh(); 
}

void SceneAnimMesh_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

class SceneZoneTrigger_Member_name : public reflection::ValueName
{
public:
	SceneZoneTrigger_Member_name()
	{
		Set_Guid("14e3e158-5114-45c1-b590-ba801322dbb9");
		Set_Name("name");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		string_Boxed const * pDataObject = core::polymorphic_downcast < string_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_name( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger const * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		string_Boxed * pDataObject = CORE_NEW string_Boxed();
		pDataObject->value = pThis->Get_name();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::uint32 size; if ( !stream.ReadSize( size ) ) return false;
		void const * bytes; if ( !stream.ReadBytes( size, bytes ) ) return false;
		string value( (char*)bytes, size );
		pThis->Set_name( value );
		return true;
	}	
};

class SceneZoneTrigger_Member_triggerType : public reflection::Value
{
public:
	SceneZoneTrigger_Member_triggerType()
	{
		Set_Guid("bf587132-4030-4b95-9206-68bea3467071");
		Set_Name("triggerType");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::TriggerType_Boxed const * pDataObject = core::polymorphic_downcast < scene::TriggerType_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_triggerType( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger const * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::TriggerType_Boxed * pDataObject = CORE_NEW scene::TriggerType_Boxed();
		pDataObject->value = pThis->Get_triggerType();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::TriggerType value; if ( !stream.ReadEnum( value ) ) return false;
		pThis->Set_triggerType( value );
		return true;
	}	
};

class SceneZoneTrigger_Member_ctrl : public reflection::Value
{
public:
	SceneZoneTrigger_Member_ctrl()
	{
		Set_Guid("fed64754-90c4-40c8-a900-c90f6989234b");
		Set_Name("ctrl");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::Controller const * pDataObject = core::polymorphic_downcast < scene::Controller const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_ctrl( *pDataObject );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::SceneZoneTrigger const * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::Controller * pDataObject = CORE_NEW scene::Controller();
		*pDataObject = pThis->Get_ctrl();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::SceneZoneTrigger * pThis = core::polymorphic_downcast< scene::SceneZoneTrigger * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::Controller value; if ( !scene::Controller_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_ctrl( value );
		return true;
	}	
};


SceneZoneTrigger_Reflection::SceneZoneTrigger_Reflection()
{
	Set_Guid("76ca5dae-e0ec-486b-ad22-48ac05249b6d");
	Set_TypeName("SceneZoneTrigger");	
	Get_Members().Add( CORE_NEW SceneZoneTrigger_Member_name() );
	Get_Members().Add( CORE_NEW SceneZoneTrigger_Member_triggerType() );
	Get_Members().Add( CORE_NEW SceneZoneTrigger_Member_ctrl() );
}

void SceneZoneTrigger_Reflection::CopyObjectDataFromTo( SceneZoneTrigger const & from, SceneZoneTrigger & to )
{
	// TODO: implement
}

core::ReferenceObject * SceneZoneTrigger_Reflection::New() const
{ 
	return CORE_NEW scene::SceneZoneTrigger(); 
}

void SceneZoneTrigger_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

class Scene_Member_mainObject : public reflection::Value
{
public:
	Scene_Member_mainObject()
	{
		Set_Guid("e62c2b4b-84f5-419b-9d6a-1f8935aae81d");
		Set_Name("mainObject");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::Scene * pThis = core::polymorphic_downcast< scene::Scene * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::SceneObject const * pDataObject = core::polymorphic_downcast < scene::SceneObject const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_mainObject( *pDataObject );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::Scene const * pThis = core::polymorphic_downcast< scene::Scene const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::SceneObject * pDataObject = CORE_NEW scene::SceneObject();
		*pDataObject = pThis->Get_mainObject();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::Scene * pThis = core::polymorphic_downcast< scene::Scene * >( &ThisUnityped );
		if ( !pThis )
			return false;
		scene::SceneObject value; if ( !scene::SceneObject_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_mainObject( value );
		return true;
	}	
};

class Scene_Member_objects : public reflection::Collection
{
public:
	Scene_Member_objects()
	{
		Set_Guid("bb1154d6-63fa-483e-a6fa-14f7549549f5");
		Set_Name("objects");
	}
	virtual bool GetCollectionObject( core::DataObject const & ThisUnityped, core::ICollection const * & pCollectionUnityped ) const
	{
		scene::Scene const * pThis = core::polymorphic_downcast< scene::Scene const * >( &ThisUnityped );
		if ( !pThis )
			return false;		
		pCollectionUnityped = &pThis->Get_objects();
		return true;
	}
	virtual bool GetCollectionObject( core::DataObject & ThisUnityped, core::ICollection * & pCollectionUnityped ) const
	{
		scene::Scene * pThis = core::polymorphic_downcast< scene::Scene * >( &ThisUnityped );
		if ( !pThis )
			return false;		
		pCollectionUnityped = &pThis->Get_objects();
		return true;
	}
};


Scene_Reflection::Scene_Reflection()
{
	Set_Guid("20df3bc1-db3d-443e-9cff-b4f14426f1be");
	Set_TypeName("Scene");	
	Get_Members().Add( CORE_NEW Scene_Member_mainObject() );
	Get_Members().Add( CORE_NEW Scene_Member_objects() );
}

void Scene_Reflection::CopyObjectDataFromTo( Scene const & from, Scene & to )
{
	// TODO: implement
}

core::ReferenceObject * Scene_Reflection::New() const
{ 
	return CORE_NEW scene::Scene(); 
}

void Scene_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

class Controller_Member_priority : public reflection::Value
{
public:
	Controller_Member_priority()
	{
		Set_Guid("6131e5df-025c-4f4f-878c-278c3ddb4c02");
		Set_Name("priority");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::Controller * pThis = core::polymorphic_downcast< scene::Controller * >( &ThisUnityped );
		if ( !pThis )
			return false;
		int_Boxed const * pDataObject = core::polymorphic_downcast < int_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_priority( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::Controller const * pThis = core::polymorphic_downcast< scene::Controller const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		int_Boxed * pDataObject = CORE_NEW int_Boxed();
		pDataObject->value = pThis->Get_priority();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::Controller * pThis = core::polymorphic_downcast< scene::Controller * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::int32 value; if ( !stream.ReadInt32( value ) ) return false;
		pThis->Set_priority( value );
		return true;
	}	
};


Controller_Reflection::Controller_Reflection()
{
	Set_Guid("34eac4c0-54b1-472f-81df-fd6e10c57087");
	Set_TypeName("Controller");	
	Get_Members().Add( CORE_NEW Controller_Member_priority() );
}

void Controller_Reflection::CopyObjectDataFromTo( Controller const & from, Controller & to )
{
	// TODO: implement
}

core::ReferenceObject * Controller_Reflection::New() const
{ 
	CORE_ASSERT( 0 && "the New operation on abstract or user-defined class" );
	return NULL; 
}

void Controller_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_ASSERT( 0 && "the Delete operation on abstract or user-defined class" ); 
}

class ControllerBox_Member_size : public reflection::Value
{
public:
	ControllerBox_Member_size()
	{
		Set_Guid("cf046c68-1382-47a2-b6b1-ed0657db99ee");
		Set_Name("size");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::ControllerBox * pThis = core::polymorphic_downcast< scene::ControllerBox * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed const * pDataObject = core::polymorphic_downcast < Vec3_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_size( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::ControllerBox const * pThis = core::polymorphic_downcast< scene::ControllerBox const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3_Boxed * pDataObject = CORE_NEW Vec3_Boxed();
		pDataObject->value = pThis->Get_size();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::ControllerBox * pThis = core::polymorphic_downcast< scene::ControllerBox * >( &ThisUnityped );
		if ( !pThis )
			return false;
		Vec3 value; if ( !Vec3_ByteStream::ObjectFromByteStream( stream, value ) ) return false;
		pThis->Set_size( value );
		return true;
	}	
};


ControllerBox_Reflection::ControllerBox_Reflection()
{
	Set_Guid("ba5451aa-f6a3-445c-b3a2-c6955ec61c03");
	Set_TypeName("ControllerBox");	
	Get_Members().Add( CORE_NEW ControllerBox_Member_size() );
}

void ControllerBox_Reflection::CopyObjectDataFromTo( ControllerBox const & from, ControllerBox & to )
{
	// TODO: implement
}

core::ReferenceObject * ControllerBox_Reflection::New() const
{ 
	return CORE_NEW scene::ControllerBox(); 
}

void ControllerBox_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

class ControllerSphere_Member_radius : public reflection::Value
{
public:
	ControllerSphere_Member_radius()
	{
		Set_Guid("4120edc6-849c-471a-ada8-42e7debb887d");
		Set_Name("radius");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		scene::ControllerSphere * pThis = core::polymorphic_downcast< scene::ControllerSphere * >( &ThisUnityped );
		if ( !pThis )
			return false;
		float_Boxed const * pDataObject = core::polymorphic_downcast < float_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_radius( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		scene::ControllerSphere const * pThis = core::polymorphic_downcast< scene::ControllerSphere const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		float_Boxed * pDataObject = CORE_NEW float_Boxed();
		pDataObject->value = pThis->Get_radius();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		scene::ControllerSphere * pThis = core::polymorphic_downcast< scene::ControllerSphere * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::float32 value; if ( !stream.ReadFloat32( value ) ) return false;
		pThis->Set_radius( value );
		return true;
	}	
};


ControllerSphere_Reflection::ControllerSphere_Reflection()
{
	Set_Guid("7ace5c93-0d37-41a0-bcc3-8ee7c34cacb3");
	Set_TypeName("ControllerSphere");	
	Get_Members().Add( CORE_NEW ControllerSphere_Member_radius() );
}

void ControllerSphere_Reflection::CopyObjectDataFromTo( ControllerSphere const & from, ControllerSphere & to )
{
	// TODO: implement
}

core::ReferenceObject * ControllerSphere_Reflection::New() const
{ 
	return CORE_NEW scene::ControllerSphere(); 
}

void ControllerSphere_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

} /* namespace scene */ 
