
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#ifndef Metadata_Game_ProjectGui_Partial_h
#define Metadata_Game_ProjectGui_Partial_h

#include "..\..\Core.h"

// forward declarations from other files

namespace game { 
	class Game; class Game_Partial;
}

// dependencies

#include "..\Engine\Fundamental.h"
#include "Gui.h"

// forward declarations

namespace gui { 
	class Gui; class Gui_Partial;
	class GuiCommon; class GuiCommon_Partial;
	class GuiMainMenu; class GuiMainMenu_Partial;
	class GuiGame; class GuiGame_Partial;
	class GuiFile; class GuiFile_Partial;
	class GuiFilesCollection; class GuiFilesCollection_Partial;
}

namespace gui { 

	// classes
	
	namespace GuiFilesCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::GuiFilesCollection & dataObject );
	};

	class GuiFilesCollection_Partial : public core::CollectionOf < gui::GuiFile * >
	{
	public:
		GuiFilesCollection_Partial();
		~GuiFilesCollection_Partial();
	};

	namespace GuiCommon_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::GuiCommon & dataObject );
	};

	class GuiCommon_Partial
	{
	public:
		GuiCommon_Partial();
		~GuiCommon_Partial();

		string Get_name() const;
		void Set_name( string value );
		
		gui::GuiFilesCollection_Partial & Get_files();
		gui::GuiFilesCollection_Partial const & Get_files() const;
		
		gui::Gui * Get_parent() const;
		void Set_parent( gui::Gui * value );
		
	private:
		string name;
		gui::GuiFilesCollection_Partial files;
		gui::Gui * parent;
	};

	namespace GuiMainMenu_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::GuiMainMenu & dataObject );
	};

	class GuiMainMenu_Partial
	{
	public:
		GuiMainMenu_Partial();
		~GuiMainMenu_Partial();
	};

	namespace GuiGame_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::GuiGame & dataObject );
	};

	class GuiGame_Partial
	{
	public:
		GuiGame_Partial();
		~GuiGame_Partial();
	};

	namespace Gui_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::Gui & dataObject );
	};

	class Gui_Partial
	{
	public:
		Gui_Partial();
		~Gui_Partial();

		string Get_name() const;
		void Set_name( string value );
		
		gui::GuiMainMenu const & Get_mainMenu() const;
		void Set_mainMenu( gui::GuiMainMenu const & value );
		
		gui::GuiGame const & Get_game() const;
		void Set_game( gui::GuiGame const & value );
		
		game::Game * Get_parent() const;
		void Set_parent( game::Game * value );
		
	private:
		string name;
		gui::GuiMainMenu * mainMenu;
		gui::GuiGame * game;
		game::Game * parent;
	};

	namespace GuiFile_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, gui::GuiFile & dataObject );
	};

	class GuiFile_Partial
	{
	public:
		GuiFile_Partial();
		~GuiFile_Partial();

		gui::Window * Get_mainWindow() const;
		void Set_mainWindow( gui::Window * value );
		
		gui::GuiCommon * Get_parent() const;
		void Set_parent( gui::GuiCommon * value );
		
		string Get_name() const;
		void Set_name( string value );
		
	private:
		gui::Window * mainWindow;
		gui::GuiCommon * parent;
		string name;
	};

} /* namespace gui */ 

#endif // Metadata_Game_ProjectGui_Partial_h
