
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#ifndef Metadata_Game_ProjectLevels_Partial_h
#define Metadata_Game_ProjectLevels_Partial_h

#include "..\..\Core.h"

// forward declarations from other files

namespace game { 
	class Game; class Game_Partial;
}

// dependencies

#include "..\Engine\Fundamental.h"
#include "Scene.h"

// forward declarations

namespace level { 
	class Levels; class Levels_Partial;
	class LevelFolder; class LevelFolder_Partial;
	class LevelFoldersCollection; class LevelFoldersCollection_Partial;
	class LevelBlock; class LevelBlock_Partial;
	class LevelBlocksCollection; class LevelBlocksCollection_Partial;
	class LevelFile; class LevelFile_Partial;
	class LevelFilesCollection; class LevelFilesCollection_Partial;
	class Dependency; class Dependency_Partial;
	class Dependencies; class Dependencies_Partial;
}

namespace level { 

	// classes
	
	namespace LevelFoldersCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelFoldersCollection & dataObject );
	};

	class LevelFoldersCollection_Partial : public core::CollectionOf < level::LevelFolder * >
	{
	public:
		LevelFoldersCollection_Partial();
		~LevelFoldersCollection_Partial();
	};

	namespace Levels_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::Levels & dataObject );
	};

	class Levels_Partial
	{
	public:
		Levels_Partial();
		~Levels_Partial();

		string Get_name() const;
		void Set_name( string value );
		
		level::LevelFoldersCollection_Partial & Get_folders();
		level::LevelFoldersCollection_Partial const & Get_folders() const;
		
		game::Game * Get_parent() const;
		void Set_parent( game::Game * value );
		
	private:
		string name;
		level::LevelFoldersCollection_Partial folders;
		game::Game * parent;
	};

	namespace Dependencies_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::Dependencies & dataObject );
	};

	class Dependencies_Partial : public core::CollectionOf < level::Dependency * >
	{
	public:
		Dependencies_Partial();
		~Dependencies_Partial();
	};

	namespace LevelBlocksCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelBlocksCollection & dataObject );
	};

	class LevelBlocksCollection_Partial : public core::CollectionOf < level::LevelBlock * >
	{
	public:
		LevelBlocksCollection_Partial();
		~LevelBlocksCollection_Partial();
	};

	namespace LevelFolder_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelFolder & dataObject );
	};

	class LevelFolder_Partial
	{
	public:
		LevelFolder_Partial();
		~LevelFolder_Partial();

		string Get_name() const;
		void Set_name( string value );
		
		level::Levels * Get_parent() const;
		void Set_parent( level::Levels * value );
		
		level::Dependencies_Partial & Get_dependencies();
		level::Dependencies_Partial const & Get_dependencies() const;
		
		level::LevelBlocksCollection_Partial & Get_blocks();
		level::LevelBlocksCollection_Partial const & Get_blocks() const;
		
	private:
		string name;
		level::Levels * parent;
		level::Dependencies_Partial dependencies;
		level::LevelBlocksCollection_Partial blocks;
	};

	namespace LevelFilesCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelFilesCollection & dataObject );
	};

	class LevelFilesCollection_Partial : public core::CollectionOf < level::LevelFile * >
	{
	public:
		LevelFilesCollection_Partial();
		~LevelFilesCollection_Partial();
	};

	namespace LevelBlock_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelBlock & dataObject );
	};

	class LevelBlock_Partial
	{
	public:
		LevelBlock_Partial();
		~LevelBlock_Partial();

		string Get_name() const;
		void Set_name( string value );
		
		level::LevelFolder * Get_parent() const;
		void Set_parent( level::LevelFolder * value );
		
		level::LevelFilesCollection_Partial & Get_files();
		level::LevelFilesCollection_Partial const & Get_files() const;
		
	private:
		string name;
		level::LevelFolder * parent;
		level::LevelFilesCollection_Partial files;
	};

	namespace LevelFile_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::LevelFile & dataObject );
	};

	class LevelFile_Partial
	{
	public:
		LevelFile_Partial();
		~LevelFile_Partial();

		level::LevelBlock * Get_parent() const;
		void Set_parent( level::LevelBlock * value );
		
		scene::Scene * Get_scene() const;
		void Set_scene( scene::Scene * value );
		
		string Get_name() const;
		void Set_name( string value );
		
	private:
		level::LevelBlock * parent;
		scene::Scene * scene;
		string name;
	};

	namespace Dependency_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, level::Dependency & dataObject );
	};

	class Dependency_Partial
	{
	public:
		Dependency_Partial();
		~Dependency_Partial();

		level::LevelFolder * Get_LevelFolder() const;
		void Set_LevelFolder( level::LevelFolder * value );
		
	private:
		level::LevelFolder * LevelFolder;
	};

} /* namespace level */ 

#endif // Metadata_Game_ProjectLevels_Partial_h
