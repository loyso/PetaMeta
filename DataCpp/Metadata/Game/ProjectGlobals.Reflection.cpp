
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#include "ProjectGlobals.h"

#include "..\..\Reflection.h"

#include "ProjectGlobals.Reflection.h"

// depends on parent/reference files
#include "Project.h"
// depends on reflection files
#include "..\Engine\Fundamental.Reflection.h"

namespace game { 

class Globals_Member_name : public reflection::ValueName
{
public:
	Globals_Member_name()
	{
		Set_Guid("f4aa4014-1f8d-437a-abff-6bc886e68882");
		Set_Name("name");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		game::Globals * pThis = core::polymorphic_downcast< game::Globals * >( &ThisUnityped );
		if ( !pThis )
			return false;
		string_Boxed const * pDataObject = core::polymorphic_downcast < string_Boxed const * > ( pDataObjectUnityped );
		if ( !pDataObject )
			return false;
		pThis->Set_name( pDataObject->value );
		return true;
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		game::Globals const * pThis = core::polymorphic_downcast< game::Globals const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		string_Boxed * pDataObject = CORE_NEW string_Boxed();
		pDataObject->value = pThis->Get_name();
		pDataObjectUnityped = pDataObject;
		return true;
	}
	virtual bool SetObjectValue_FromByteStream( core::DataObject & ThisUnityped, core::ByteStreamReader & stream ) const
	{
		game::Globals * pThis = core::polymorphic_downcast< game::Globals * >( &ThisUnityped );
		if ( !pThis )
			return false;
		core::uint32 size; if ( !stream.ReadSize( size ) ) return false;
		void const * bytes; if ( !stream.ReadBytes( size, bytes ) ) return false;
		string value( (char*)bytes, size );
		pThis->Set_name( value );
		return true;
	}	
};

class Globals_Member_parent : public reflection::ParentReference
{
public:
	Globals_Member_parent()
	{
		Set_Guid("6253d28a-6b1f-4af5-9919-3129616938fb");
		Set_Name("parent");
	}
	virtual bool SetObjectValue( core::DataObject & ThisUnityped, core::DataObject * pDataObjectUnityped ) const
	{
		game::Globals * pThis = core::polymorphic_downcast< game::Globals * >( &ThisUnityped );
		if ( !pThis )
			return false;
			
		game::Game * pDataObject = NULL;			
		if ( pDataObjectUnityped )
		{
			pDataObject = core::polymorphic_downcast< game::Game * >( pDataObjectUnityped );
			if ( !pDataObject )
				return false;
		}		
		pThis->Set_parent( pDataObject );
		return true;	
	}
	virtual bool GetObjectValue( core::DataObject const & ThisUnityped, core::DataObject * & pDataObjectUnityped ) const
	{
		game::Globals const * pThis = core::polymorphic_downcast< game::Globals const * >( &ThisUnityped );
		if ( !pThis )
			return false;
		pDataObjectUnityped = pThis->Get_parent();
		return true;	
	}
};


Globals_Reflection::Globals_Reflection()
{
	Set_Guid("b5866822-9df5-4c77-abbc-ea49875fbedf");
	Set_TypeName("Globals");	
	Get_Members().Add( CORE_NEW Globals_Member_name() );
	Get_Members().Add( CORE_NEW Globals_Member_parent() );
}

void Globals_Reflection::CopyObjectDataFromTo( Globals const & from, Globals & to )
{
	// TODO: implement
}

core::ReferenceObject * Globals_Reflection::New() const
{ 
	return CORE_NEW game::Globals(); 
}

void Globals_Reflection::Delete( core::ReferenceObject * pDataObject ) const
{ 
	CORE_DELETE pDataObject; 
}

} /* namespace game */ 
