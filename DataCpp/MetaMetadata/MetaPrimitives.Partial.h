
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#ifndef MetaMetadata_MetaPrimitives_Partial_h
#define MetaMetadata_MetaPrimitives_Partial_h

#include "..\Core.h"

// forward declarations from other files


// dependencies

#include "MetaClasses.h"
#include "MetaFundamental.h"

// forward declarations

namespace reflection { 
	class Fundamental; class Fundamental_Partial;
	class FundamentalBool; class FundamentalBool_Partial;
	class FundamentalString; class FundamentalString_Partial;
	class FundamentalInt; class FundamentalInt_Partial;
	class FundamentalFloat; class FundamentalFloat_Partial;
	class FundamentalByte; class FundamentalByte_Partial;
	class Enumeration; class Enumeration_Partial;
	class Enumerator; class Enumerator_Partial;
	class EnumeratorsCollection; class EnumeratorsCollection_Partial;
}

namespace reflection { 

	// classes
	
	namespace Fundamental_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Fundamental & dataObject );
	};

	class Fundamental_Partial
	{
	public:
		Fundamental_Partial();
		~Fundamental_Partial();
	};

	namespace FundamentalBool_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FundamentalBool & dataObject );
	};

	class FundamentalBool_Partial
	{
	public:
		FundamentalBool_Partial();
		~FundamentalBool_Partial();
	};

	namespace FundamentalString_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FundamentalString & dataObject );
	};

	class FundamentalString_Partial
	{
	public:
		FundamentalString_Partial();
		~FundamentalString_Partial();
	};

	namespace FundamentalInt_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FundamentalInt & dataObject );
	};

	class FundamentalInt_Partial
	{
	public:
		FundamentalInt_Partial();
		~FundamentalInt_Partial();
	};

	namespace FundamentalFloat_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FundamentalFloat & dataObject );
	};

	class FundamentalFloat_Partial
	{
	public:
		FundamentalFloat_Partial();
		~FundamentalFloat_Partial();
	};

	namespace FundamentalByte_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FundamentalByte & dataObject );
	};

	class FundamentalByte_Partial
	{
	public:
		FundamentalByte_Partial();
		~FundamentalByte_Partial();
	};

	namespace EnumeratorsCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::EnumeratorsCollection & dataObject );
	};

	class EnumeratorsCollection_Partial : public core::CollectionOf < reflection::Enumerator * >
	{
	public:
		EnumeratorsCollection_Partial();
		~EnumeratorsCollection_Partial();
	};

	namespace Enumeration_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Enumeration & dataObject );
	};

	class Enumeration_Partial
	{
	public:
		Enumeration_Partial();
		~Enumeration_Partial();

		reflection::EnumeratorsCollection_Partial & Get_Enumerators();
		reflection::EnumeratorsCollection_Partial const & Get_Enumerators() const;
		
	private:
		reflection::EnumeratorsCollection_Partial Enumerators;
	};

	namespace Enumerator_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Enumerator & dataObject );
	};

	class Enumerator_Partial
	{
	public:
		Enumerator_Partial();
		~Enumerator_Partial();

		string Get_Name() const;
		void Set_Name( string value );
		
		int Get_IntegralValue() const;
		void Set_IntegralValue( int value );
		
	private:
		string Name;
		int IntegralValue;
	};

} /* namespace reflection */ 

#endif // MetaMetadata_MetaPrimitives_Partial_h
