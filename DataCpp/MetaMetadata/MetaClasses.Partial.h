
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

#ifndef MetaMetadata_MetaClasses_Partial_h
#define MetaMetadata_MetaClasses_Partial_h

#include "..\Core.h"

// forward declarations from other files

namespace reflection { 
	class MetadataFile; class MetadataFile_Partial;
}
namespace reflection { 
	class MetadataMemberGroup; class MetadataMemberGroup_Partial;
}

// dependencies

#include "MetaFundamental.h"

// forward declarations

namespace reflection { 
	class Type; class Type_Partial;
	class TypesCollection; class TypesCollection_Partial;
	class MetadataClass; class MetadataClass_Partial;
	class AbstractClass; class AbstractClass_Partial;
	class CollectionClass; class CollectionClass_Partial;
	class FileClass; class FileClass_Partial;
	class FolderClass; class FolderClass_Partial;
	class FolderStorageClass; class FolderStorageClass_Partial;
	class ProjectClass; class ProjectClass_Partial;
	class MetadataFileContent; class MetadataFileContent_Partial;
	class Member; class Member_Partial;
	class MembersCollection; class MembersCollection_Partial;
	class Value; class Value_Partial;
	class ValueName; class ValueName_Partial;
	class Reference; class Reference_Partial;
	class ParentReference; class ParentReference_Partial;
	class Collection; class Collection_Partial;
	class FileStorage; class FileStorage_Partial;
}

namespace reflection { 

	// classes
	
	namespace Type_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Type & dataObject );
	};

	class Type_Partial
	{
	public:
		Type_Partial();
		~Type_Partial();

		reflection::MetadataFileContent * Get_Parent() const;
		void Set_Parent( reflection::MetadataFileContent * value );
		
		string Get_TypeName() const;
		void Set_TypeName( string value );
		
		string Get_Namespace() const;
		void Set_Namespace( string value );
		
	private:
		reflection::MetadataFileContent * Parent;
		string TypeName;
		string Namespace;
	};

	namespace TypesCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::TypesCollection & dataObject );
	};

	class TypesCollection_Partial : public core::CollectionOf < reflection::Type * >
	{
	public:
		TypesCollection_Partial();
		~TypesCollection_Partial();
	};

	namespace MembersCollection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::MembersCollection & dataObject );
	};

	class MembersCollection_Partial : public core::CollectionOf < reflection::Member * >
	{
	public:
		MembersCollection_Partial();
		~MembersCollection_Partial();
	};

	namespace MetadataClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::MetadataClass & dataObject );
	};

	class MetadataClass_Partial
	{
	public:
		MetadataClass_Partial();
		~MetadataClass_Partial();

		reflection::MetadataClass * Get_BaseClass() const;
		void Set_BaseClass( reflection::MetadataClass * value );
		
		bool Get_IsReferenced() const;
		void Set_IsReferenced( bool value );
		
		bool Get_HasMinMax() const;
		void Set_HasMinMax( bool value );
		
		reflection::MembersCollection_Partial & Get_Members();
		reflection::MembersCollection_Partial const & Get_Members() const;
		
		bool Get_UserDefined() const;
		void Set_UserDefined( bool value );
		
	private:
		reflection::MetadataClass * BaseClass;
		bool IsReferenced;
		bool HasMinMax;
		reflection::MembersCollection_Partial Members;
		bool UserDefined;
	};

	namespace AbstractClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::AbstractClass & dataObject );
	};

	class AbstractClass_Partial
	{
	public:
		AbstractClass_Partial();
		~AbstractClass_Partial();
	};

	namespace CollectionClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::CollectionClass & dataObject );
	};

	class CollectionClass_Partial
	{
	public:
		CollectionClass_Partial();
		~CollectionClass_Partial();

		reflection::MetadataClass * Get_ItemsClass() const;
		void Set_ItemsClass( reflection::MetadataClass * value );
		
		bool Get_IsPolymorphic() const;
		void Set_IsPolymorphic( bool value );
		
	private:
		reflection::MetadataClass * ItemsClass;
		bool IsPolymorphic;
	};

	namespace FileClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FileClass & dataObject );
	};

	class FileClass_Partial
	{
	public:
		FileClass_Partial();
		~FileClass_Partial();

		string Get_FileExtension() const;
		void Set_FileExtension( string value );
		
	private:
		string FileExtension;
	};

	namespace FolderClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FolderClass & dataObject );
	};

	class FolderClass_Partial
	{
	public:
		FolderClass_Partial();
		~FolderClass_Partial();
	};

	namespace FolderStorageClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FolderStorageClass & dataObject );
	};

	class FolderStorageClass_Partial
	{
	public:
		FolderStorageClass_Partial();
		~FolderStorageClass_Partial();
	};

	namespace ProjectClass_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::ProjectClass & dataObject );
	};

	class ProjectClass_Partial
	{
	public:
		ProjectClass_Partial();
		~ProjectClass_Partial();

		string Get_FileExtension() const;
		void Set_FileExtension( string value );
		
	private:
		string FileExtension;
	};

	namespace MetadataFileContent_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::MetadataFileContent & dataObject );
	};

	class MetadataFileContent_Partial
	{
	public:
		MetadataFileContent_Partial();
		~MetadataFileContent_Partial();

		reflection::MetadataFile * Get_Parent() const;
		void Set_Parent( reflection::MetadataFile * value );
		
		reflection::TypesCollection_Partial & Get_Types();
		reflection::TypesCollection_Partial const & Get_Types() const;
		
	private:
		reflection::MetadataFile * Parent;
		reflection::TypesCollection_Partial Types;
	};

	namespace Member_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Member & dataObject );
	};

	class Member_Partial
	{
	public:
		Member_Partial();
		~Member_Partial();

		string Get_Name() const;
		void Set_Name( string value );
		
		reflection::MetadataMemberGroup * Get_Group() const;
		void Set_Group( reflection::MetadataMemberGroup * value );
		
	private:
		string Name;
		reflection::MetadataMemberGroup * Group;
	};

	namespace Value_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Value & dataObject );
	};

	class Value_Partial
	{
	public:
		Value_Partial();
		~Value_Partial();

		reflection::Type * Get_Type() const;
		void Set_Type( reflection::Type * value );
		
		bool Get_IsXmlAttr() const;
		void Set_IsXmlAttr( bool value );
		
		bool Get_IsPolymorphic() const;
		void Set_IsPolymorphic( bool value );
		
		string Get_DefaultValue() const;
		void Set_DefaultValue( string value );
		
		string Get_DefaultValueXml() const;
		void Set_DefaultValueXml( string value );
		
		string Get_Min() const;
		void Set_Min( string value );
		
		string Get_Max() const;
		void Set_Max( string value );
		
	private:
		reflection::Type * Type;
		bool IsXmlAttr;
		bool IsPolymorphic;
		string DefaultValue;
		string DefaultValueXml;
		string Min;
		string Max;
	};

	namespace ValueName_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::ValueName & dataObject );
	};

	class ValueName_Partial
	{
	public:
		ValueName_Partial();
		~ValueName_Partial();
	};

	namespace Reference_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Reference & dataObject );
	};

	class Reference_Partial
	{
	public:
		Reference_Partial();
		~Reference_Partial();

		reflection::MetadataClass * Get_Type() const;
		void Set_Type( reflection::MetadataClass * value );
		
		bool Get_IsXmlAttr() const;
		void Set_IsXmlAttr( bool value );
		
	private:
		reflection::MetadataClass * Type;
		bool IsXmlAttr;
	};

	namespace ParentReference_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::ParentReference & dataObject );
	};

	class ParentReference_Partial
	{
	public:
		ParentReference_Partial();
		~ParentReference_Partial();

		reflection::MetadataClass * Get_Type() const;
		void Set_Type( reflection::MetadataClass * value );
		
	private:
		reflection::MetadataClass * Type;
	};

	namespace Collection_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::Collection & dataObject );
	};

	class Collection_Partial
	{
	public:
		Collection_Partial();
		~Collection_Partial();

		reflection::CollectionClass * Get_Type() const;
		void Set_Type( reflection::CollectionClass * value );
		
	private:
		reflection::CollectionClass * Type;
	};

	namespace FileStorage_ByteStream
	{
		bool ObjectFromByteStream( core::ByteStreamReader & stream, reflection::FileStorage & dataObject );
	};

	class FileStorage_Partial
	{
	public:
		FileStorage_Partial();
		~FileStorage_Partial();

		reflection::MetadataClass * Get_Type() const;
		void Set_Type( reflection::MetadataClass * value );
		
	private:
		reflection::MetadataClass * Type;
	};

} /* namespace reflection */ 

#endif // MetaMetadata_MetaClasses_Partial_h
