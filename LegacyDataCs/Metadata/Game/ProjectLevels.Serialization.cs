
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

using System;
using System.Collections.Generic;
using System.IO;
using System.Xml.Serialization;
using System.ComponentModel;

namespace level { 

	[XmlType("Levels")]
	public class Levels_Serialization : core.ReferenceSerializationObject
	{
		[XmlIgnore]
		level.Levels This;

		[XmlAttribute]
		[DefaultValue("Levels")]
		public string name = "Levels";

		[XmlArray]
		[XmlArrayItem(typeof(level.LevelFolder_Serialization),ElementName = "LevelFolder")]
		public level.LevelFoldersCollection_Serialization folders = new level.LevelFoldersCollection_Serialization();

		[XmlIgnore]
		public game.Game_Serialization parent;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			stringToObject.Add( GuidStr.ToOptGuid(), This );	
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			if ( folders != null )
				folders.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.Levels)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.Levels dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			folders.FromSerializationConstruct( This.folders );
			foreach( level.LevelFolder collectionElement in This.folders )
			{
				collectionElement.parent = This;
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.Levels dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			This.name = name;
			folders.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.Levels)dataObject );
		}
		protected void ToSerialization_Base( level.Levels dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			name = This.name;
			folders.ToSerialization( This.folders );
			foreach ( level.LevelFolder_Serialization collectionElement in folders )
			{
				collectionElement.parent = this;
			}
		}
		
		public override void FileStorage_FromSerializationConstruct()
		{
			base.FileStorage_FromSerializationConstruct();
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.FileStorage_FromSerializationConstruct();
		}
		
		public override void FileStorage_FromSerialization( core.StringToObject stringToObject )
		{
			base.FileStorage_FromSerialization( stringToObject );
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.FileStorage_FromSerialization( stringToObject );
		}
		public override void FileStorage_ToSerialization()
		{
			base.FileStorage_ToSerialization();
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.FileStorage_ToSerialization();
		}
		[XmlIgnore]
		public string RelativeName { get { return name; } }
		[XmlIgnore]
		public string RootFolderRelativeName { get { return name + @"\"; } }
		[XmlIgnore]
		public string FullName { get { return parent.ProjectPath + @"\" + name; } }
		
		public override void CreateDirectory(string projectPath)
		{
			Directory.CreateDirectory(projectPath + @"\"+ RelativeName);
			CreateDirectory_Base( projectPath );
		}
		protected override void CreateDirectory_Base(string projectPath)
		{
			base.CreateDirectory_Base( projectPath );
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.CreateDirectory(projectPath);
		}
		
		public override void Load()
		{
			base.Load();
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.Load();		
		}
		
		public override void Save()
		{
			base.Save();
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.Save();		
		}
		
		public override void SaveAs(string projectPath)
		{
			base.SaveAs( projectPath );
			foreach( level.LevelFolder_Serialization collectionElement in folders )
				collectionElement.SaveAs( projectPath );		
		}
	}

	[XmlType("LevelFolder")]
	public class LevelFolder_Serialization : core.ReferenceSerializationObject
	{
		[XmlIgnore]
		level.LevelFolder This;

		[XmlAttribute]
		[DefaultValue("Level")]
		public string name = "Level";

		[XmlIgnore]
		public level.Levels_Serialization parent;

		[XmlArray]
		[XmlArrayItem(typeof(level.Dependency_Serialization),ElementName = "Dependency")]
		public level.Dependencies_Serialization dependencies = new level.Dependencies_Serialization();

		[XmlArray]
		[XmlArrayItem(typeof(level.LevelBlock_Serialization),ElementName = "LevelBlock")]
		public level.LevelBlocksCollection_Serialization blocks = new level.LevelBlocksCollection_Serialization();

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			stringToObject.Add( GuidStr.ToOptGuid(), This );	
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			if ( dependencies != null )
				dependencies.CreateGuidToObjectMapping( stringToObject );
			if ( blocks != null )
				blocks.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelFolder)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelFolder dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			dependencies.FromSerializationConstruct( This.dependencies );
			foreach( level.Dependency collectionElement in This.dependencies )
			{
			}
			blocks.FromSerializationConstruct( This.blocks );
			foreach( level.LevelBlock collectionElement in This.blocks )
			{
				collectionElement.parent = This;
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelFolder dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			This.name = name;
			dependencies.FromSerialization( stringToObject );
			blocks.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelFolder)dataObject );
		}
		protected void ToSerialization_Base( level.LevelFolder dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			name = This.name;
			dependencies.ToSerialization( This.dependencies );
			foreach ( level.Dependency_Serialization collectionElement in dependencies )
			{
			}
			blocks.ToSerialization( This.blocks );
			foreach ( level.LevelBlock_Serialization collectionElement in blocks )
			{
				collectionElement.parent = this;
			}
		}
		
		public override void FileStorage_FromSerializationConstruct()
		{
			base.FileStorage_FromSerializationConstruct();
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.FileStorage_FromSerializationConstruct();
		}
		
		public override void FileStorage_FromSerialization( core.StringToObject stringToObject )
		{
			base.FileStorage_FromSerialization( stringToObject );
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.FileStorage_FromSerialization( stringToObject );
		}
		public override void FileStorage_ToSerialization()
		{
			base.FileStorage_ToSerialization();
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.FileStorage_ToSerialization();
		}
		[XmlIgnore]
		public string RelativeName { get { return (parent == null ? "" : parent.RelativeName + @"\") + name; } }
		[XmlIgnore]
		public string RootFolderRelativeName { get { return parent == null ? "" : parent.RootFolderRelativeName + name + @"\"; } }
		[XmlIgnore]
		public string FullName { get { return parent.FullName + @"\" + name; } }
		
		public override void CreateDirectory(string projectPath)
		{
			Directory.CreateDirectory(projectPath + @"\"+ RelativeName);
			CreateDirectory_Base( projectPath );
		}
		protected override void CreateDirectory_Base(string projectPath)
		{
			base.CreateDirectory_Base( projectPath );
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.CreateDirectory(projectPath);
		}
		
		public override void Load()
		{
			base.Load();
			foreach( level.Dependency_Serialization collectionElement in dependencies )
				collectionElement.Load();		
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.Load();		
		}
		
		public override void Save()
		{
			base.Save();
			foreach( level.Dependency_Serialization collectionElement in dependencies )
				collectionElement.Save();		
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.Save();		
		}
		
		public override void SaveAs(string projectPath)
		{
			base.SaveAs( projectPath );
			foreach( level.Dependency_Serialization collectionElement in dependencies )
				collectionElement.SaveAs( projectPath );		
			foreach( level.LevelBlock_Serialization collectionElement in blocks )
				collectionElement.SaveAs( projectPath );		
		}
	}

	[XmlType("LevelFoldersCollection")]
	public class LevelFoldersCollection_Serialization : core.SerializationCollectionOf <level.LevelFolder_Serialization>
	{
		[XmlIgnore]
		level.LevelFoldersCollection This;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			foreach( level.LevelFolder_Serialization collectionElement in Values )
				collectionElement.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelFoldersCollection)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelFoldersCollection dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			This.Clear();
			foreach( level.LevelFolder_Serialization collectionElement in Values )
			{
				level.LevelFolder dataCollectionElement = data.Serialization.ConstructData<level.LevelFolder>( collectionElement.GetType() );
				collectionElement.FromSerializationConstruct( dataCollectionElement );
				This.Add( dataCollectionElement );
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelFoldersCollection dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			foreach( level.LevelFolder_Serialization collectionElement in Values )
				collectionElement.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelFoldersCollection)dataObject );
		}
		protected void ToSerialization_Base( level.LevelFoldersCollection dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			Clear();
			foreach( level.LevelFolder dataCollectionElement in This )
			{
				level.LevelFolder_Serialization collectionElement = data.Serialization.ConstructSerialization<level.LevelFolder_Serialization>( dataCollectionElement.GetType() );
				collectionElement.ToSerialization( dataCollectionElement );	
				Add( collectionElement );
			}
		}
		
	}

	[XmlType("LevelBlock")]
	public class LevelBlock_Serialization : core.ReferenceSerializationObject
	{
		[XmlIgnore]
		level.LevelBlock This;

		[XmlAttribute]
		[DefaultValue("Block")]
		public string name = "Block";

		[XmlIgnore]
		public level.LevelFolder_Serialization parent;

		[XmlArray]
		[XmlArrayItem(typeof(level.LevelFile_Serialization),ElementName = "LevelFile")]
		public level.LevelFilesCollection_Serialization files = new level.LevelFilesCollection_Serialization();

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			stringToObject.Add( GuidStr.ToOptGuid(), This );	
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			if ( files != null )
				files.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelBlock)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelBlock dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			files.FromSerializationConstruct( This.files );
			foreach( level.LevelFile collectionElement in This.files )
			{
				collectionElement.parent = This;
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelBlock dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			This.name = name;
			files.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelBlock)dataObject );
		}
		protected void ToSerialization_Base( level.LevelBlock dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			name = This.name;
			files.ToSerialization( This.files );
			foreach ( level.LevelFile_Serialization collectionElement in files )
			{
				collectionElement.parent = this;
			}
		}
		
		public override void FileStorage_FromSerializationConstruct()
		{
			base.FileStorage_FromSerializationConstruct();
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.FileStorage_FromSerializationConstruct();
		}
		
		public override void FileStorage_FromSerialization( core.StringToObject stringToObject )
		{
			base.FileStorage_FromSerialization( stringToObject );
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.FileStorage_FromSerialization( stringToObject );
		}
		public override void FileStorage_ToSerialization()
		{
			base.FileStorage_ToSerialization();
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.FileStorage_ToSerialization();
		}
		[XmlIgnore]
		public string RelativeName { get { return (parent == null ? "" : parent.RelativeName + @"\") + name; } }
		[XmlIgnore]
		public string RootFolderRelativeName { get { return parent == null ? "" : parent.RootFolderRelativeName + name + @"\"; } }
		[XmlIgnore]
		public string FullName { get { return parent.FullName + @"\" + name; } }
		
		public override void CreateDirectory(string projectPath)
		{
			Directory.CreateDirectory(projectPath + @"\"+ RelativeName);
			CreateDirectory_Base( projectPath );
		}
		protected override void CreateDirectory_Base(string projectPath)
		{
			base.CreateDirectory_Base( projectPath );
		}
		
		public override void Load()
		{
			base.Load();
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.Load();		
		}
		
		public override void Save()
		{
			base.Save();
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.Save();		
		}
		
		public override void SaveAs(string projectPath)
		{
			base.SaveAs( projectPath );
			foreach( level.LevelFile_Serialization collectionElement in files )
				collectionElement.SaveAs( projectPath );		
		}
	}

	[XmlType("LevelBlocksCollection")]
	public class LevelBlocksCollection_Serialization : core.SerializationCollectionOf <level.LevelBlock_Serialization>
	{
		[XmlIgnore]
		level.LevelBlocksCollection This;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			foreach( level.LevelBlock_Serialization collectionElement in Values )
				collectionElement.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelBlocksCollection)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelBlocksCollection dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			This.Clear();
			foreach( level.LevelBlock_Serialization collectionElement in Values )
			{
				level.LevelBlock dataCollectionElement = data.Serialization.ConstructData<level.LevelBlock>( collectionElement.GetType() );
				collectionElement.FromSerializationConstruct( dataCollectionElement );
				This.Add( dataCollectionElement );
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelBlocksCollection dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			foreach( level.LevelBlock_Serialization collectionElement in Values )
				collectionElement.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelBlocksCollection)dataObject );
		}
		protected void ToSerialization_Base( level.LevelBlocksCollection dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			Clear();
			foreach( level.LevelBlock dataCollectionElement in This )
			{
				level.LevelBlock_Serialization collectionElement = data.Serialization.ConstructSerialization<level.LevelBlock_Serialization>( dataCollectionElement.GetType() );
				collectionElement.ToSerialization( dataCollectionElement );	
				Add( collectionElement );
			}
		}
		
	}

	[XmlType("LevelFile")]
	public class LevelFile_Serialization : core.ReferenceSerializationObject
	{
		[XmlIgnore]
		level.LevelFile This;

		[XmlIgnore]
		public level.LevelBlock_Serialization parent;

		[XmlIgnore]
		public scene.Scene_Serialization scene;

		[XmlAttribute]
		[DefaultValue("File")]
		public string name = "File";

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			stringToObject.Add( GuidStr.ToOptGuid(), This );	
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			if ( scene != null )
				scene.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelFile)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelFile dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelFile dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			This.name = name;
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelFile)dataObject );
		}
		protected void ToSerialization_Base( level.LevelFile dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			name = This.name;
		}
		
		public override void FileStorage_FromSerializationConstruct()
		{
			base.FileStorage_FromSerializationConstruct();
			if ( scene != null )
			{
				This.scene = data.Serialization.ConstructData<scene.Scene>( scene.GetType() );
				scene.FromSerializationConstruct( This.scene );
			}
		}
		
		public override void FileStorage_FromSerialization( core.StringToObject stringToObject )
		{
			base.FileStorage_FromSerialization( stringToObject );
			if ( scene != null )
				scene.FromSerialization( stringToObject );
		}
		public override void FileStorage_ToSerialization()
		{
			base.FileStorage_ToSerialization();
			if ( This.scene != null )
			{
				scene = new scene.Scene_Serialization();
				scene.ToSerialization( This.scene );
			}
		}
		
		[XmlIgnore]
		public string RelativeName { get { return parent.RelativeName + @"\" + name; } }
		[XmlIgnore]
		public string RelativeNameExtension { get { return RelativeName + FileExtension; } }
		[XmlIgnore]
		public string FullName { get { return parent.FullName + @"\" + name; } }
		[XmlIgnore]
		public string FullNameExtension { get { return FullName + FileExtension; } }
		public const string FileExtension = ".level";
		[XmlIgnore]
		public string RootFolderRelativeName { get { return parent.RootFolderRelativeName + name; } }
		
		public override void Load()
		{
			base.Load();
			if ( System.IO.File.Exists( FullNameExtension ) )
			{
				FileStream filestream = new FileStream(FullNameExtension, FileMode.Open, FileAccess.Read );
				XmlSerializer xmlSerializer = new XmlSerializer(typeof(scene.Scene_Serialization), data.Serialization.Types );
				scene = (scene.Scene_Serialization)xmlSerializer.Deserialize(filestream);
				filestream.Close();
			}
		}
		
		public override void Save()
		{
			base.Save();
			if ( scene != null )
			{
				XmlSerializer xmlSerializer = new XmlSerializer(typeof(scene.Scene_Serialization), data.Serialization.Types );
				TextWriter textWriter = new StreamWriter(FullNameExtension);
				xmlSerializer.Serialize(textWriter, scene);
				textWriter.Close();
			}
		}
		
		public override void SaveAs( string projectPath )
		{
			base.SaveAs( projectPath );
			if ( scene != null )
			{
				XmlSerializer xmlSerializer = new XmlSerializer(typeof(scene.Scene_Serialization), data.Serialization.Types );
				TextWriter textWriter = new StreamWriter( projectPath + @"\" + RelativeNameExtension );
				xmlSerializer.Serialize(textWriter, scene);
				textWriter.Close();
			}
		}
	}

	[XmlType("LevelFilesCollection")]
	public class LevelFilesCollection_Serialization : core.SerializationCollectionOf <level.LevelFile_Serialization>
	{
		[XmlIgnore]
		level.LevelFilesCollection This;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			foreach( level.LevelFile_Serialization collectionElement in Values )
				collectionElement.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.LevelFilesCollection)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.LevelFilesCollection dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			This.Clear();
			foreach( level.LevelFile_Serialization collectionElement in Values )
			{
				level.LevelFile dataCollectionElement = data.Serialization.ConstructData<level.LevelFile>( collectionElement.GetType() );
				collectionElement.FromSerializationConstruct( dataCollectionElement );
				This.Add( dataCollectionElement );
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.LevelFilesCollection dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			foreach( level.LevelFile_Serialization collectionElement in Values )
				collectionElement.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.LevelFilesCollection)dataObject );
		}
		protected void ToSerialization_Base( level.LevelFilesCollection dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			Clear();
			foreach( level.LevelFile dataCollectionElement in This )
			{
				level.LevelFile_Serialization collectionElement = data.Serialization.ConstructSerialization<level.LevelFile_Serialization>( dataCollectionElement.GetType() );
				collectionElement.ToSerialization( dataCollectionElement );	
				Add( collectionElement );
			}
		}
		
	}

	[XmlType("Dependency")]
	public class Dependency_Serialization : core.ReferenceSerializationObject
	{
		[XmlIgnore]
		level.Dependency This;

		[XmlAttribute]
		[DefaultValue("")]
		public string LevelFolder;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			stringToObject.Add( GuidStr.ToOptGuid(), This );	
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.Dependency)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.Dependency dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.Dependency dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			This.LevelFolder = stringToObject.Fixup < level.LevelFolder >( LevelFolder.ToOptGuid() );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.Dependency)dataObject );
		}
		protected void ToSerialization_Base( level.Dependency dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			LevelFolder = ( This.LevelFolder == null ? "" : This.LevelFolder.Guid.ToOptString() );
		}
		
	}

	[XmlType("Dependencies")]
	public class Dependencies_Serialization : core.SerializationCollectionOf <level.Dependency_Serialization>
	{
		[XmlIgnore]
		level.Dependencies This;

		public override void CreateGuidToObjectMapping ( core.StringToObject stringToObject ) 
		{
			CreateGuidToObjectMapping_Base( stringToObject );
		}
		protected override void CreateGuidToObjectMapping_Base ( core.StringToObject stringToObject )
		{
			base.CreateGuidToObjectMapping_Base( stringToObject );
			foreach( level.Dependency_Serialization collectionElement in Values )
				collectionElement.CreateGuidToObjectMapping( stringToObject );
		}
		
		public override void FromSerializationConstruct( core.DataObject dataObject )
		{
			FromSerializationConstruct_Base( (level.Dependencies)dataObject );
		}
		protected void FromSerializationConstruct_Base( level.Dependencies dataObject )
		{
			This = dataObject;
			base.FromSerializationConstruct_Base( This );
			This.Clear();
			foreach( level.Dependency_Serialization collectionElement in Values )
			{
				level.Dependency dataCollectionElement = data.Serialization.ConstructData<level.Dependency>( collectionElement.GetType() );
				collectionElement.FromSerializationConstruct( dataCollectionElement );
				This.Add( dataCollectionElement );
			}
		}
		
		public override void FromSerialization( core.StringToObject stringToObject )
		{
			FromSerialization_Base( This, stringToObject );
		}
		protected void FromSerialization_Base( level.Dependencies dataObject, core.StringToObject stringToObject )
		{
			base.FromSerialization_Base( This, stringToObject );	
			foreach( level.Dependency_Serialization collectionElement in Values )
				collectionElement.FromSerialization( stringToObject );
		}
		
		public override void ToSerialization( core.DataObject dataObject )
		{
			ToSerialization_Base( (level.Dependencies)dataObject );
		}
		protected void ToSerialization_Base( level.Dependencies dataObject )
		{
			This = dataObject;	
			base.ToSerialization_Base( This );
			Clear();
			foreach( level.Dependency dataCollectionElement in This )
			{
				level.Dependency_Serialization collectionElement = data.Serialization.ConstructSerialization<level.Dependency_Serialization>( dataCollectionElement.GetType() );
				collectionElement.ToSerialization( dataCollectionElement );	
				Add( collectionElement );
			}
		}
		
	}

} /* namespace level */ 
