
// AUTOGENERATED FILE. MODIFY IT AT YOUR OWN RISK.

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace level { 

	public partial class Levels : core.ReferenceObject
	{
		public string name = "Levels";
		public level.LevelFoldersCollection folders = new level.LevelFoldersCollection();
		public game.Game parent;
		public string RelativeName { get { return name; } }
		public string RootFolderRelativeName { get { return name + @"\"; } }
		public string FullName { get { return parent.ProjectPath + @"\" + name; } }
		
		public level.LevelFolder LevelFolderCreate(string name)
		{
			level.LevelFolder collectionElement = new level.LevelFolder();
			collectionElement.parent = this;
			collectionElement.name = name;
			collectionElement.Guid = Guid.NewGuid();
			
			folders.Add(collectionElement);
			return collectionElement;
		}
		
		public level.LevelFolder LevelFolderGet( string name )
		{
			level.LevelFolder collectionElement = folders.Find( f => f.name == name );
			if ( collectionElement == null )
				throw new core.TreePathException( name );
			return collectionElement;
		}
	}

	public partial class LevelFolder : core.ReferenceObject, core.IFolderStorageObject
	{
		public string name = "Level";
		public level.Levels parent;
		public level.Dependencies dependencies = new level.Dependencies();
		public level.LevelBlocksCollection blocks = new level.LevelBlocksCollection();
		public string RelativeName { get { return (parent == null ? "" : parent.RelativeName + @"\") + name; } }
		public string RootFolderRelativeName { get { return parent == null ? "" : parent.RootFolderRelativeName + name + @"\"; } }
		public string FullName { get { return parent.FullName + @"\" + name; } }
		
		public level.LevelBlock LevelBlockCreate(string name)
		{
			level.LevelBlock collectionElement = new level.LevelBlock();
			collectionElement.parent = this;
			collectionElement.name = name;
			collectionElement.Guid = Guid.NewGuid();
			
			blocks.Add(collectionElement);
			return collectionElement;
		}
		
		public level.LevelBlock LevelBlockGet( string name )
		{
			level.LevelBlock collectionElement = blocks.Find( f => f.name == name );
			if ( collectionElement == null )
				throw new core.TreePathException( name );
			return collectionElement;
		}
	}

	public partial class LevelFoldersCollection : core.CollectionOf <level.LevelFolder>
	{
	}

	public partial class LevelBlock : core.ReferenceObject
	{
		public string name = "Block";
		public level.LevelFolder parent;
		public level.LevelFilesCollection files = new level.LevelFilesCollection();
		public string RelativeName { get { return (parent == null ? "" : parent.RelativeName + @"\") + name; } }
		public string RootFolderRelativeName { get { return parent == null ? "" : parent.RootFolderRelativeName + name + @"\"; } }
		public string FullName { get { return parent.FullName + @"\" + name; } }
		
		public level.LevelFile LevelFileCreate(string name)
		{
			level.LevelFile collectionElement = new level.LevelFile();
			collectionElement.parent = this;
			collectionElement.name = name;
			collectionElement.Guid = Guid.NewGuid();
			
			files.Add(collectionElement);
			return collectionElement;
		}
		
		public level.LevelFile LevelFileGet( string name )
		{
			level.LevelFile collectionElement = files.Find( f => f.name == name );
			if ( collectionElement == null )
				throw new core.TreePathException( name );
			return collectionElement;
		}
	}

	public partial class LevelBlocksCollection : core.CollectionOf <level.LevelBlock>
	{
	}

	public partial class LevelFile : core.ReferenceObject
	{
		public level.LevelBlock parent;
		public scene.Scene scene;
		public string name = "File";
		public string RelativeName { get { return parent.RelativeName + @"\" + name; } }
		public string FullName { get { return parent.FullName + @"\" + name; } }
		public string RootFolderRelativeName { get { return parent.RootFolderRelativeName + name; } }
	}

	public partial class LevelFilesCollection : core.CollectionOf <level.LevelFile>
	{
	}

	public partial class Dependency : core.ReferenceObject
	{
		public level.LevelFolder LevelFolder;
	}

	public partial class Dependencies : core.CollectionOf <level.Dependency>
	{
	}

} /* namespace level */ 
